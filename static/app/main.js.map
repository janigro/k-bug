{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/loader.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"form-row\\\">\\n      <div class=\\\"col-auto\\\">\\n        <label>Number of Requests</label>\\n        <input class=\\\"form-control\\\" [(ngModel)]=\\\"rCount\\\">\\n      </div>\\n      <div class=\\\"col-auto\\\">\\n          <label>Mode</label>\\n          <div>\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"semaphoreMode\\\">\\n              <option [ngValue]=\\\"1\\\">Use Semaphores</option>\\n              <option [ngValue]=\\\"2\\\">Do Not Use Semaphores</option>\\n              <option [ngValue]=\\\"3\\\">Mixed</option>\\n            </select>\\n          </div>\\n      </div>\\n      <div class=\\\"col-auto\\\">\\n        <label>&nbsp;</label>\\n        <div *ngIf=\\\"done\\\"><button [disabled]=\\\"badRange()\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"begin()\\\">MAKE REQUESTS</button>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"row mt-4\\\">\\n    <div class=\\\"col-12\\\">\\n      <div *ngIf=\\\"badRange()\\\" class=\\\"alert alert-warning\\\">\\n        <label>Number of Requests must be > 0 and < 7.</label>\\n        <div>Chrome can only make up to 6 concurrent requests, the rest is queued.</div>\\n      </div>\\n      <div *ngIf=\\\"!done\\\">\\n        <div class=\\\"text-primary\\\">Getting data from server...</div>\\n      </div>\\n      <div *ngIf=\\\"error\\\">\\n        <div class=\\\"text-danger\\\">There was a problem contacting the server! Try again.</div>\\n      </div>\\n      <div *ngIf=\\\"times != null\\\" class=\\\"container\\\">\\n        <table class=\\\"table table-sm table-hover\\\">\\n          <tr>\\n            <th>Request #</th>\\n            <th>Semaphores</th>\\n            <th>Processing Duration</th>\\n            <th>Query Duration</th>\\n            <th>Total Duration</th>\\n            <th>Start Time</th>\\n            <th>End Time</th>\\n          </tr>\\n          <tr *ngFor=\\\"let req of times\\\">\\n            <td>{{ req.n }}</td>\\n            <td>{{ req.semaphores }}</td>\\n            <td>{{ formatMS(req.exec_time) }}</td>\\n            <td>{{ formatMS(req.query_time) }}</td>\\n            <td>{{ formatMS(req.total_time) }}</td>\\n            <td>{{ req.begin }}</td>\\n            <td>{{ req.end }}</td>\\n          </tr>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n</div>\"","module.exports = \"label {\\n  font-weight: bold; }\\n\\nth, td {\\n  white-space: nowrap;\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qYXZpZXIvRGVza3RvcC9rLWJ1Zy9rLWJ1Zy1hcHAvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBaUIsRUFBQTs7QUFHckI7RUFDSSxtQkFBbUI7RUFDbkIsa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJsYWJlbCB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbnRoLCB0ZCB7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il19 */\"","import { Component } from '@angular/core';\nimport { LoaderService } from './loader.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public done = true;\n  public error = false;\n\n  public rCount = 6;\n  public semaphoreMode = 1; // 1 means use semaphores, 2 means do not use semaphores, 3 means mixed\n\n  public times: Array<any> = null;\n\n  constructor(private ldr: LoaderService) {\n\n  }\n\n  public begin() {\n    if (this.badRange()) {\n      return;\n    }\n\n    this.done = false;\n    this.error = false;\n\n    this.times = null;\n\n    this.ldr.dbRequests(this.semaphoreMode, this.getCount()).subscribe((responses) => {\n      this.done = true;\n      this.times = responses;\n    },\n    (error) => {\n      console.log('error = ', error);\n      this.error = true;\n      this.done = true;\n    });\n  }\n\n  getCount() {\n    return parseInt(this.rCount + '', 10);\n  }\n\n  formatMS(v: string): string {\n    return parseInt(parseFloat(v) * 1000 + '', 10) + ' ms';\n  }\n\n  badRange(): boolean {\n    const c = this.getCount();\n\n    if (c < 1 || c > 6 || isNaN(c)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { LoaderService } from './loader.service';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n  ],\n  imports: [\n    BrowserModule, HttpClientModule, FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, forkJoin } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  dbRequest(semaphores: boolean, k: number): Observable<any> {\n    if (semaphores) {\n      return this.http.get<any>('/with_semaphores/' + k);\n    } else {\n      return this.http.get<any>('/without_semaphores/' + k);\n    }\n\n  }\n\n  dbRequests(semaphores: number, requestCount: number): Observable<any> {\n\n    const observables = new Array<Observable<any>>();\n\n    for (let j = 0; j < requestCount; j++) {\n      let s = true;\n\n      if (semaphores === 1) {\n        s = true;\n      } else if (semaphores === 2) {\n        s = false;\n      } else {\n        s = (j % 2) === 0;\n      }\n      observables.push(this.dbRequest(s, j));\n    }\n\n    return forkJoin(observables);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}